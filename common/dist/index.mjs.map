{"version":3,"file":"index.mjs","sources":["../src/environment.ts","../src/proxies.ts","../src/branding.ts","../src/index.ts"],"sourcesContent":["/** Define process.env to contain `KonveyorEnvType` */\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace NodeJS {\n    interface ProcessEnv extends Partial<Readonly<KonveyorEnvType>> {}\n  }\n}\n\n/**\n * The set of environment variables used by `@konveyor-ui` packages.\n */\nexport type KonveyorEnvType = {\n  NODE_ENV: \"development\" | \"production\" | \"test\";\n  VERSION: string;\n\n  /** Controls how mock data is injected on the client */\n  MOCK: string;\n\n  /** Enable RBAC authentication/authorization */\n  AUTH_REQUIRED: \"true\" | \"false\";\n\n  /** SSO / Keycloak realm */\n  KEYCLOAK_REALM: string;\n\n  /** SSO / Keycloak client id */\n  KEYCLOAK_CLIENT_ID: string;\n\n  /** UI upload file size limit in megabytes (MB), suffixed with \"m\" */\n  UI_INGRESS_PROXY_BODY_SIZE: string;\n\n  /** Allow clearing local maven artifact repository? Requires availability of RWX volumes for hub. */\n  RWX_SUPPORTED: \"true\" | \"false\";\n\n  /** The listen port for the UI's server */\n  PORT?: string;\n\n  /** Target URL for the UI server's `/auth` proxy */\n  KEYCLOAK_SERVER_URL?: string;\n\n  /** Target URL for the UI server's `/hub` proxy */\n  TACKLE_HUB_URL?: string;\n\n  /** Location of branding files (relative paths computed from the project source root) */\n  BRANDING?: string;\n};\n\n/**\n * Keys in `KonveyorEnvType` that are only used on the server and therefore do not\n * need to be sent to the client.\n */\nexport const SERVER_ENV_KEYS = [\n  \"PORT\",\n  \"KEYCLOAK_SERVER_URL\",\n  \"TACKLE_HUB_URL\",\n  \"BRANDING\",\n];\n\n/**\n * Create a `KonveyorEnv` from a partial `KonveyorEnv` with a set of default values.\n */\nexport const buildKonveyorEnv = ({\n  NODE_ENV = \"production\",\n  PORT,\n  VERSION = \"99.0.0\",\n  MOCK = \"off\",\n\n  KEYCLOAK_SERVER_URL,\n  AUTH_REQUIRED = \"false\",\n  KEYCLOAK_REALM = \"tackle\",\n  KEYCLOAK_CLIENT_ID = \"tackle-ui\",\n\n  UI_INGRESS_PROXY_BODY_SIZE = \"500m\",\n  RWX_SUPPORTED = \"true\",\n  TACKLE_HUB_URL,\n  BRANDING,\n}: Partial<KonveyorEnvType> = {}): KonveyorEnvType => ({\n  NODE_ENV,\n  PORT,\n  VERSION,\n  MOCK,\n\n  KEYCLOAK_SERVER_URL,\n  AUTH_REQUIRED,\n  KEYCLOAK_REALM,\n  KEYCLOAK_CLIENT_ID,\n\n  UI_INGRESS_PROXY_BODY_SIZE,\n  RWX_SUPPORTED,\n  TACKLE_HUB_URL,\n  BRANDING,\n});\n\n/**\n * Default values for `KonveyorEnvType`.\n */\nexport const KONVEYOR_ENV_DEFAULTS = buildKonveyorEnv();\n\n/**\n * Current `@konveyor-ui` environment configurations from `process.env`.\n */\nexport const KONVEYOR_ENV = buildKonveyorEnv(process.env);\n","import type { Options } from \"http-proxy-middleware\";\nimport { KONVEYOR_ENV } from \"./environment.js\";\n\nexport const proxyMap: Record<string, Options> = {\n  \"/auth\": {\n    target: KONVEYOR_ENV.KEYCLOAK_SERVER_URL || \"http://localhost:9001\",\n    logLevel: process.env.DEBUG ? \"debug\" : \"info\",\n\n    changeOrigin: true,\n\n    onProxyReq: (proxyReq, req, _res) => {\n      // Keycloak needs these header set so we can function in Kubernetes (non-OpenShift)\n      // https://www.keycloak.org/server/reverseproxy\n      //\n      // Note, on OpenShift, this works as the haproxy implementation\n      // for the OpenShift route is setting these for us automatically\n      //\n      // We saw problems with including the below broke the OpenShift route\n      //  {\"X-Forwarded-Proto\", req.protocol} broke the OpenShift\n      //  {\"X-Forwarded-Port\", req.socket.localPort}\n      //  {\"Forwarded\", `for=${req.socket.remoteAddress};proto=${req.protocol};host=${req.headers.host}`}\n      // so we are not including even though they are customary\n      //\n      req.socket.remoteAddress &&\n        proxyReq.setHeader(\"X-Forwarded-For\", req.socket.remoteAddress);\n      req.socket.remoteAddress &&\n        proxyReq.setHeader(\"X-Real-IP\", req.socket.remoteAddress);\n      req.headers.host &&\n        proxyReq.setHeader(\"X-Forwarded-Host\", req.headers.host);\n    },\n  },\n\n  \"/hub\": {\n    target: KONVEYOR_ENV.TACKLE_HUB_URL || \"http://localhost:9002\",\n    logLevel: process.env.DEBUG ? \"debug\" : \"info\",\n\n    changeOrigin: true,\n    pathRewrite: {\n      \"^/hub\": \"\",\n    },\n\n    onProxyReq: (proxyReq, req, _res) => {\n      // Add the Bearer token to the request if it is not already present, AND if\n      // the token is part of the request as a cookie\n      if (req.cookies?.keycloak_cookie && !req.headers[\"authorization\"]) {\n        proxyReq.setHeader(\n          \"Authorization\",\n          `Bearer ${req.cookies.keycloak_cookie}`\n        );\n      }\n    },\n    onProxyRes: (proxyRes, req, res) => {\n      const includesJsonHeaders =\n        req.headers.accept?.includes(\"application/json\");\n      if (\n        (!includesJsonHeaders && proxyRes.statusCode === 401) ||\n        (!includesJsonHeaders && proxyRes.statusMessage === \"Unauthorized\")\n      ) {\n        res.redirect(\"/\");\n      }\n    },\n  },\n\n  \"/kai\": {\n    target: KONVEYOR_ENV.TACKLE_HUB_URL || \"http://localhost:9002\",\n    logLevel: process.env.DEBUG ? \"debug\" : \"info\",\n\n    changeOrigin: true,\n    pathRewrite: {\n      \"^/kai\": \"/services/kai\",\n    },\n\n    onProxyReq: (proxyReq, req, _res) => {\n      // Add the Bearer token to the request if it is not already present, AND if\n      // the token is part of the request as a cookie\n      if (req.cookies?.keycloak_cookie && !req.headers[\"authorization\"]) {\n        proxyReq.setHeader(\n          \"Authorization\",\n          `Bearer ${req.cookies.keycloak_cookie}`\n        );\n      }\n    },\n    onProxyRes: (proxyRes, req, res) => {\n      const includesJsonHeaders =\n        req.headers.accept?.includes(\"application/json\");\n      if (\n        (!includesJsonHeaders && proxyRes.statusCode === 401) ||\n        (!includesJsonHeaders && proxyRes.statusMessage === \"Unauthorized\")\n      ) {\n        res.redirect(\"/\");\n      }\n    },\n  },\n};\n","export interface MastheadBrand {\n  src: string;\n  alt: string;\n  height: string;\n}\n\nexport interface MastheadTitle {\n  text: string;\n  heading?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n  size?: \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\" | \"4xl\";\n}\n\nexport interface BrandingStrings {\n  application: {\n    title: string;\n    name?: string;\n    description?: string;\n  };\n\n  about: {\n    displayName: string;\n    imageSrc?: string;\n    documentationUrl?: string;\n  };\n\n  masthead: {\n    leftBrand?: MastheadBrand;\n    leftTitle?: MastheadTitle;\n    rightBrand?: MastheadBrand;\n  };\n}\n\n// Note: Typescript will look at the `paths` definition to resolve this import\n//       to a stub JSON file.  In the next rollup build step, that import will\n//       be replaced by the rollup virtual plugin with a dynamically generated\n//       JSON import with the actual branding information.\nimport * as stringsJson from \"@branding/strings.json\";\n\nexport const brandingStrings =\n  stringsJson.default as unknown as BrandingStrings;\n\n/**\n * Return the `node_modules/` resolved path for the branding assets.\n */\nexport const brandingAssetPath = () =>\n  require\n    .resolve(\"@konveyor-ui/common/package.json\")\n    .replace(/(.)\\/package.json$/, \"$1\") + \"/dist/branding\";\n","export * from \"./environment.js\";\nexport * from \"./proxies.js\";\nexport * from \"./branding.js\";\n\n/**\n * Return a base64 encoded JSON string containing the given `env` object.\n */\nexport const encodeEnv = (env: object, exclude?: string[]): string => {\n  const filtered = exclude\n    ? Object.fromEntries(\n        Object.entries(env).filter(([key]) => !exclude.includes(key))\n      )\n    : env;\n\n  return btoa(JSON.stringify(filtered));\n};\n\n/**\n * Return an objects from a base64 encoded JSON string.\n */\nexport const decodeEnv = (env: string): object =>\n  !env ? undefined : JSON.parse(atob(env));\n\n// TODO: Include `index.html.ejs` to `index.html` template file processing...\n"],"names":["stringsJson.default"],"mappings":"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"}