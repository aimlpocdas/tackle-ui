import * as React from 'react';
import { FormGroupProps, TextArea, TextAreaProps, TextInput, TextInputProps } from '@patternfly/react-core';
import { IValidatedFormField } from '../../hooks/useFormState';
interface IValidatedTextInputProps extends Pick<FormGroupProps, 'label' | 'fieldId' | 'isRequired'>, Pick<TextInputProps, 'type'> {
    /** A field returned from useFormField() or useFormState().fields. */
    field: IValidatedFormField<string> | IValidatedFormField<string | undefined>;
    /** Either a TextInput or TextArea from @patternfly/react-core. Defaults to TextInput */
    component?: typeof TextInput | typeof TextArea;
    /** Whether to show the green 'valid' style when the field has been validated. Defaults to false ('default' style) */
    greenWhenValid?: boolean;
    /** Extra callback to call onBlur in addition to setting the field isTouched in state */
    onBlur?: () => void;
    /** Extra callback to call onChange in addition to setting the field value in state */
    onChange?: (value: string) => void;
    /** Any extra props for the PatternFly FormGroup */
    formGroupProps?: Partial<FormGroupProps>;
    /** Any extra props for the PatternFly TextInput or TextArea */
    inputProps?: Partial<TextInputProps> | Partial<TextAreaProps>;
}
export declare const ValidatedTextInput: React.FunctionComponent<IValidatedTextInputProps>;
export {};
